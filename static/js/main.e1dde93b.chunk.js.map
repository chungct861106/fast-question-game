{"version":3,"sources":["context/user.js","api/question.js","api/user.js","api/index.js","page/login.js","page/signup.js","page/dashboard.js","page/question.js","page/edit.js","page/review.js","page/verify.js","page/remider.js","router/index.js","App.js","index.js"],"names":["UserInfoContext","React","createContext","MyApp","_ref","children","_useState","useState","_useState2","Object","slicedToArray","userInfo","setUser","_useState3","_useState4","isLogin","setLoginStatus","_useCookies","useCookies","_useCookies2","cookies","setCookie","removeCookie","defaultLogin","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","user_token","axios","get","process","params","token","sent","status","setTimeout","t0","stop","apply","this","arguments","useEffect","value","login","logout","react_default","createElement","Provider","useUser","useContext","Question","classCallCheck","server","prototype","Create","parameters","post","headers","Authorization","abrupt","response","_x","Update","_callee2","_context2","_x2","GetQuestions","_ref3","_callee3","_context3","_x3","GetReviews","_callee4","_context4","Delete","_ref5","_callee5","_context5","delete","_x4","GiveRate","_ref6","_callee6","_context6","_x5","User","Login","put","Active","GetUsers","Remind","email","Resend","useService","services","user","question","Content","Layout","LoginPage","_Form$useForm","Form","useForm","form","handleSubmit","password","data","history","push","message","error","useHistory","row","className","style","textAlign","src","height","width","alt","es_form","layout","title","onFinish","Item","label","name","rules","required","input","Password","es_button","type","onClick","submit","marginTop","marginBottom","react_router_dom_min","to","SignUpPage","e","success","setFields","signup_Content","breadcrumb","Separator","hasFeedback","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","whitespace","Dashboard","users","setUsers","questions","setQuestion","fetchUser","fetchQuestion","columns","dataIndex","render","_ref4","_id","username","concat","QAcolumns","user_id","create_time","Date","toLocaleString","_ref7","col","span","table","dataSource","scroll","y","offset","userID","useParams","location","useLocation","search","URLSearchParams","setFieldsValue","numbers","isQA","state","setState","objectSpread","es_radio","Group","optionType","options","onChange","target","map","num","EditQuestion","questionID","isLoading","question_id","handleUpdate","handleDelete","info","spin","spinning","danger","Review","review","option1","option2","rate","es_rate","defaultValue","setLoading","reviews","setReviews","loading","Verify","verify_Content","remider_Content","LoginRouter","Fragment","react_router","exact","path","page_login","signup","verify","remider","GameRouter","dashboard","page_question","edit","MyRouter","_useUser","react_router_dom","menu","theme","mode","key","color","position","right","window","pathname","router_Content","App","router","ReactDOM","react","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1dde93b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { useCookies } from \"react-cookie\";\nimport React, { useContext, useState, useEffect } from \"react\";\n\nconst UserInfoContext = React.createContext(null);\n\nfunction MyApp({ children }) {\n  const [userInfo, setUser] = useState({});\n  const [isLogin, setLoginStatus] = useState(false);\n  const [cookies, setCookie, removeCookie] = useCookies([\"userInfo\"]);\n  const defaultLogin = async () => {\n    if (cookies.userInfo && cookies.userInfo.user_token) {\n      try {\n        const response = await axios.get(\n          process.env.REACT_APP_BACKEND_HOST + \"/user/checkToken\",\n          { params: { token: cookies.userInfo.user_token } }\n        );\n        if (response.status === 200) {\n          setUser(cookies.userInfo);\n          setTimeout(() => {\n            setLoginStatus(true);\n          }, 100);\n        }\n      } catch (err) {\n        setLoginStatus(false);\n        removeCookie(\"userInfo\");\n      }\n    }\n  };\n  useEffect(() => {\n    defaultLogin();\n  }, []);\n  const login = (userInfo) => {\n    setUser(userInfo);\n    setCookie(\"userInfo\", userInfo);\n    setLoginStatus(true);\n  };\n  const logout = () => {\n    setUser({});\n    removeCookie(\"userInfo\");\n    setLoginStatus(false);\n  };\n  const value = {\n    userInfo,\n    isLogin,\n    login,\n    logout,\n  };\n\n  return (\n    <UserInfoContext.Provider value={value}>\n      {children}\n    </UserInfoContext.Provider>\n  );\n}\nexport default MyApp;\nexport function useUser() {\n  return useContext(UserInfoContext);\n}\n","import axios from \"axios\";\n\nclass Question {\n  constructor(token) {\n    this.token = token;\n    this.server = process.env.REACT_APP_BACKEND_HOST;\n  }\n}\n\nQuestion.prototype.Create = async function(parameters) {\n  try {\n    return await axios.post(this.server + \"/question/create\", parameters, {\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\nQuestion.prototype.Update = async function(parameters) {\n  try {\n    return await axios.post(this.server + \"/question/update\", parameters, {\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nQuestion.prototype.GetQuestions = async function(parameters) {\n  try {\n    return await axios.get(this.server + \"/question/data\", {\n      params: parameters,\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nQuestion.prototype.GetReviews = async function() {\n  try {\n    return await axios.get(this.server + \"/question/reviews\", {\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nQuestion.prototype.Delete = async function(parameters) {\n  try {\n    return await axios.delete(this.server + \"/question/delete\", {\n      params: parameters,\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\nQuestion.prototype.GiveRate = async function(parameters) {\n  try {\n    return await axios.post(this.server + \"/rate\", parameters, {\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default Question;\n","import axios from \"axios\";\n\nclass User {\n  constructor(token) {\n    this.token = token;\n    this.server = process.env.REACT_APP_BACKEND_HOST;\n  }\n}\n\nUser.prototype.Login = async function(params) {\n  try {\n    return await axios.put(this.server + \"/user/login\", params);\n  } catch (err) {\n    return err.response;\n  }\n};\nUser.prototype.Create = async function(params) {\n  try {\n    return await axios.post(this.server + \"/user/create\", params);\n  } catch (err) {\n    return err.response;\n  }\n};\n\nUser.prototype.Active = async function(token) {\n  try {\n    return await axios.post(\n      this.server + \"/user/active\",\n      {},\n      {\n        headers: { Authorization: token },\n      }\n    );\n  } catch (err) {\n    return err.response;\n  }\n};\n\nUser.prototype.GetUsers = async function() {\n  try {\n    return await axios.get(this.server + \"/user/data\", {\n      headers: { Authorization: this.token },\n    });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nUser.prototype.Remind = async function(email) {\n  try {\n    return await axios.put(this.server + \"/user/remind\", { email });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nUser.prototype.Resend = async function(email) {\n  try {\n    return await axios.put(this.server + \"/user/resend\", { email });\n  } catch (err) {\n    return err.response;\n  }\n};\n\nexport default User;\n","import { useUser } from \"../context/user\";\nimport Question from \"./question\";\nimport User from \"./user\";\n\nfunction useService() {\n  const { userInfo } = useUser();\n  const services = {\n    user: new User(userInfo.user_token),\n    question: new Question(userInfo.user_token),\n  };\n\n  return { services };\n}\n\nexport default useService;\n","import React from \"react\";\nimport { Layout, Input, Form, Row, Button, message } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUser } from \"../context/user\";\nimport useService from \"../api\";\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\nconst { Content } = Layout;\nfunction LoginPage() {\n  const [form] = Form.useForm();\n  const { services } = useService();\n  const { login } = useUser();\n  const handleSubmit = async ({ email, password }) => {\n    const response = await services.user.Login({ email, password });\n    if (response.status === 200) {\n      login(response.data.data);\n      history.push(\"/dashboard\");\n      return;\n    }\n    message.error(response.data.data);\n  };\n  const history = useHistory();\n  return (\n    <Content>\n      <Row className=\"center-vertical\">\n        <h1 style={{ textAlign: \"center\" }}>說說 Lab</h1>\n        <img\n          src=\"https://solab-ntu.github.io/rw_common/images/rwsitelogo.png\"\n          style={{ height: \"100px\", width: \"200px\" }}\n          alt=\"\"\n        />\n      </Row>\n      <Row className=\"center-vertical\">\n        <Form\n          form={form}\n          layout=\"vertical\"\n          style={{ width: 350 }}\n          title=\"說說 Lab\"\n          onFinish={handleSubmit}\n        >\n          <Form.Item\n            label=\"信箱\"\n            name=\"email\"\n            rules={[{ required: true, message: \"Email is required\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"密碼\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Password is required\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Button\n            type=\"primary\"\n            style={{ width: \"100%\" }}\n            onClick={() => form.submit()}\n          >\n            登入\n          </Button>\n\n          <Button\n            type=\"primary\"\n            style={{ width: \"100%\", marginTop: 15, marginBottom: 15 }}\n            onClick={() => history.push(\"/signup\")}\n          >\n            註冊帳號\n          </Button>\n          <NavLink to=\"/remind\">我是北七我忘記密碼</NavLink>\n        </Form>\n      </Row>\n    </Content>\n  );\n}\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Layout, Input, Form, Row, Button, message, Breadcrumb } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport useService from \"../api\";\n\nconst { Content } = Layout;\n\nfunction SignUpPage() {\n  const [form] = Form.useForm();\n  const { services } = useService();\n  const handleSubmit = async (e) => {\n    const response = await services.user.Create(e);\n\n    if (response.status === 200) {\n      message.success(\"驗證信已寄出\");\n      return;\n    }\n    form.setFields(response.data.data);\n  };\n  const history = useHistory();\n  return (\n    <Content>\n      <Row className=\"center-left\">\n        <Breadcrumb>\n          <Breadcrumb.Separator />\n          <Breadcrumb.Item onClick={() => history.push(\"/\")}>\n            返回登入頁面\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </Row>\n      <Row className=\"center-vertical\">\n        <h1 style={{ textAlign: \"center\" }}>說說 Lab</h1>\n        <img\n          src=\"https://solab-ntu.github.io/rw_common/images/rwsitelogo.png\"\n          style={{ height: \"100px\", width: \"200px\" }}\n          alt=\"\"\n        />\n      </Row>\n      <Row className=\"center-vertical\">\n        <Form\n          layout=\"vertical\"\n          form={form}\n          title=\"SOLab Login\"\n          style={{ width: 350 }}\n          onFinish={handleSubmit}\n        >\n          <Form.Item\n            name=\"email\"\n            label=\"信箱\"\n            rules={[\n              {\n                type: \"email\",\n                message: \"信箱格式有誤\",\n              },\n              {\n                required: true,\n                message: \"請輸入你的信箱\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            name=\"password\"\n            label=\"密碼\"\n            rules={[\n              {\n                required: true,\n                message: \"請輸入你的密碼\",\n              },\n            ]}\n            hasFeedback\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"passwordconfirm\"\n            label=\"Confirm Password\"\n            dependencies={[\"password\"]}\n            hasFeedback\n            rules={[\n              {\n                required: true,\n                message: \"請輸入上方相同密碼\",\n              },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(new Error(\"密碼不相同\"));\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item\n            name=\"username\"\n            label=\"名稱\"\n            rules={[\n              {\n                required: true,\n                message: \"請輸入名稱\",\n                whitespace: true,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Button\n            type=\"primary\"\n            style={{ width: \"100%\" }}\n            onClick={() => form.submit()}\n          >\n            註冊\n          </Button>\n\n          <Button\n            type=\"primary\"\n            style={{ width: \"100%\", marginTop: 15 }}\n            onClick={() => history.push(\"/\")}\n          >\n            返回登入頁面\n          </Button>\n        </Form>\n      </Row>\n    </Content>\n  );\n}\n\nexport default SignUpPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Row, Col, Button } from \"antd\";\nimport useService from \"../api\";\nimport { useHistory } from \"react-router-dom\";\nfunction Dashboard() {\n  const history = useHistory();\n  const [users, setUsers] = useState([]);\n  const [questions, setQuestion] = useState([]);\n  const { services } = useService();\n  const fetchUser = async () => {\n    const response = await services.user.GetUsers();\n    if (response.status === 200) setUsers(response.data.data);\n  };\n  const fetchQuestion = async () => {\n    const response = await services.question.GetQuestions();\n    if (response.status === 200) setQuestion(response.data.data);\n  };\n  useEffect(async () => {\n    fetchUser();\n    fetchQuestion();\n  }, []);\n  const columns = [\n    {\n      dataIndex: \"username\",\n      title: \"使用者名稱\",\n    },\n\n    {\n      title: \"新增題目\",\n      render: ({ _id, username }) => (\n        <Button onClick={() => history.push(`/new/${_id}?text=${username}`)}>\n          新增題目\n        </Button>\n      ),\n    },\n  ];\n\n  const QAcolumns = [\n    {\n      title: \"使用者名稱\",\n      width: 180,\n      render: ({ user_id }) => user_id.username,\n    },\n    {\n      title: \"題目\",\n      width: 300,\n      dataIndex: \"title\",\n    },\n    {\n      title: \"創建時間\",\n      width: 180,\n      render: ({ create_time }) => new Date(create_time).toLocaleString(),\n    },\n\n    {\n      title: \"編輯題目\",\n      width: 180,\n      render: ({ _id, user_id }) => (\n        <Button\n          onClick={() => history.push(`/edit/${_id}?text=${user_id.username}`)}\n        >\n          編輯題目\n        </Button>\n      ),\n    },\n  ];\n\n  return (\n    <Row style={{ height: \"100%\" }}>\n      <Col span={6}>\n        <Table\n          title={() => <h3>說說仔s</h3>}\n          dataSource={users}\n          columns={columns}\n          scroll={{ y: 700 }}\n        />\n      </Col>\n      <Col offset={1} span={16}>\n        <Table\n          title={() => <h3>你的說說 List</h3>}\n          dataSource={questions}\n          columns={QAcolumns}\n          scroll={{ y: 700 }}\n        />\n      </Col>\n    </Row>\n  );\n}\nexport default Dashboard;\n","import React, { useEffect } from \"react\";\nimport { Form, Row, Breadcrumb, Input, Radio, Button, message } from \"antd\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useState } from \"react/cjs/react.development\";\nimport { useLocation } from \"react-router-dom\";\nimport useService from \"../api\";\n\nfunction Question() {\n  const { userID } = useParams();\n  const { services } = useService();\n  const location = useLocation().search;\n  const username = new URLSearchParams(location).get(\"text\");\n  const [form] = Form.useForm();\n  const history = useHistory();\n  useEffect(() => {\n    form.setFieldsValue({ type: \"QA\", numbers: 2 });\n  }, []);\n  const questionType = [\n    { label: \"快問快答\", value: \"QA\" },\n    { label: \"殘酷二選一\", value: \"OP\" },\n  ];\n\n  const [state, setState] = useState({\n    isQA: true,\n  });\n\n  const handleSubmit = async (e) => {\n    const response = await services.question.Create({ ...e, user_id: userID });\n    if (response.status === 200) {\n      message.success(\"提問成功\");\n      history.push(\"/dashboard\");\n    }\n  };\n\n  return (\n    <Row className=\"center-vertical\">\n      <Row className=\"center-left\">\n        <Breadcrumb>\n          <Breadcrumb.Separator />\n          <Breadcrumb.Item onClick={() => history.push(\"/dashboard\")}>\n            返回主頁\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </Row>\n      <Row className=\"center-vertical\">\n        <h1 style={{ textAlign: \"center\" }}>問: {username}</h1>\n        <Form form={form} style={{ width: 600 }} onFinish={handleSubmit}>\n          <Form.Item\n            name=\"title\"\n            label=\"題目\"\n            rules={[{ required: true, message: \"輸入題目內容\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item name=\"type\" label=\"選擇\">\n            <Radio.Group\n              optionType=\"button\"\n              options={questionType}\n              onChange={(e) =>\n                setState((state) => ({\n                  ...state,\n                  isQA: e.target.value === \"QA\",\n                }))\n              }\n            />\n          </Form.Item>\n\n          {!state.isQA &&\n            [1, 2].map((num) => (\n              <Form.Item\n                label={`選項 ${num}`}\n                name={`option${num}`}\n                rules={[{ required: true, message: `輸入選項${num}內容` }]}\n              >\n                <Input />\n              </Form.Item>\n            ))}\n          <Button\n            style={{ width: \"100%\" }}\n            type=\"primary\"\n            onClick={() => form.submit()}\n          >\n            提交\n          </Button>\n        </Form>\n      </Row>\n    </Row>\n  );\n}\nexport default Question;\n","import React, { useEffect } from \"react\";\nimport {\n  Form,\n  Row,\n  Breadcrumb,\n  Input,\n  Radio,\n  Spin,\n  Button,\n  Col,\n  message,\n} from \"antd\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport { useState } from \"react/cjs/react.development\";\nimport useService from \"../api\";\n\nfunction EditQuestion() {\n  const { questionID } = useParams();\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const { services } = useService();\n  const questionType = [\n    { label: \"快問快答\", value: \"QA\" },\n    { label: \"殘酷二選一\", value: \"OP\" },\n  ];\n  const location = useLocation().search;\n  const username = new URLSearchParams(location).get(\"text\");\n  const [state, setState] = useState({\n    isLoading: true,\n    isQA: true,\n  });\n  useEffect(async () => {\n    const response = await services.question.GetQuestions({\n      question_id: questionID,\n    });\n    if (response.status === 200) {\n      form.setFieldsValue(response.data.data);\n      setState({ isLoading: false, isQA: response.data.data.type === \"QA\" });\n    }\n  }, []);\n\n  const handleUpdate = async (e) => {\n    const response = await services.question.Update({\n      ...e,\n      question_id: questionID,\n    });\n    if (response.status === 200) {\n      message.success(\"編輯成功\");\n      history.push(\"/dashboard\");\n    }\n  };\n  const handleDelete = async (e) => {\n    const response = await services.question.Delete({\n      question_id: questionID,\n    });\n    if (response.status === 200) {\n      message.info(\"提問已刪除\");\n      history.push(\"/dashboard\");\n    }\n  };\n\n  return (\n    <Row className=\"center-vertical\">\n      <Spin spinning={state.isLoading}>\n        <Row className=\"center-left\">\n          <Breadcrumb>\n            <Breadcrumb.Separator />\n            <Breadcrumb.Item onClick={() => history.push(\"/\")}>\n              返回主頁\n            </Breadcrumb.Item>\n          </Breadcrumb>\n        </Row>\n        <Row className=\"center-vertical\">\n          <h1 style={{ textAlign: \"center\" }}>問: {username}</h1>\n          <Form form={form} style={{ width: 600 }} onFinish={handleUpdate}>\n            <Form.Item\n              name=\"title\"\n              label=\"題目\"\n              rules={[{ required: true, message: \"輸入題目內容\" }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"type\" label=\"選擇\">\n              <Radio.Group\n                optionType=\"button\"\n                options={questionType}\n                onChange={(e) =>\n                  setState((state) => ({\n                    ...state,\n                    isQA: e.target.value === \"QA\",\n                  }))\n                }\n              />\n            </Form.Item>\n            {!state.isQA &&\n              [1, 2].map((num) => (\n                <Form.Item\n                  label={`選項 ${num}`}\n                  name={`option${num}`}\n                  rules={[{ required: true, message: `輸入選項${num}內容` }]}\n                >\n                  <Input />\n                </Form.Item>\n              ))}\n            <Row>\n              <Col span={11}>\n                <Button\n                  type=\"primary\"\n                  onClick={() => form.submit()}\n                  style={{ width: \"100%\" }}\n                >\n                  提交\n                </Button>\n              </Col>\n              <Col offset={2} span={11}>\n                <Button\n                  type=\"primary\"\n                  onClick={handleDelete}\n                  style={{ width: \"100%\" }}\n                  danger\n                >\n                  刪除\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </Row>\n      </Spin>\n    </Row>\n  );\n}\nexport default EditQuestion;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Row, Col, Rate } from \"antd\";\nimport useService from \"../api\";\n\nfunction Review() {\n  const { services } = useService();\n  const columns = [\n    {\n      title: \"使用者名稱\",\n      dataIndex: \"username\",\n      width: 150,\n    },\n    {\n      title: \"題目\",\n      width: 300,\n\n      render: (review) => {\n        if (review.type === \"QA\") return review.title;\n        else return `${review.title}: 1.${review.option1} 2.${review.option2}`;\n      },\n    },\n    {\n      title: \"創建時間\",\n      width: 180,\n      render: ({ create_time }) => new Date(create_time).toLocaleString(),\n    },\n\n    {\n      title: \"評分\",\n      width: 180,\n      render: ({ _id, rate }) => (\n        <Rate\n          defaultValue={rate}\n          onChange={async (rate) => {\n            services.question.GiveRate({ question_id: _id, rate });\n          }}\n        />\n      ),\n    },\n    {\n      title: \"總評\",\n      dataIndex: \"avarage\",\n      width: 50,\n    },\n  ];\n  const [isLoading, setLoading] = useState(true);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(async () => {\n    const response = await services.question.GetReviews();\n    if (response.status === 200) {\n      setReviews(response.data.data);\n      setLoading(false);\n    }\n  }, []);\n\n  return (\n    <Row>\n      <Col span={23}>\n        <Table\n          title={() => <h2>評論區</h2>}\n          loading={isLoading}\n          dataSource={reviews}\n          columns={columns}\n          scroll={{ y: 400 }}\n        />\n      </Col>\n    </Row>\n  );\n}\nexport default Review;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport {\n  Button,\n  Input,\n  Layout,\n  Row,\n  Form,\n  message,\n  Spin,\n  Breadcrumb,\n} from \"antd\";\nimport useService from \"../api\";\n\nconst { Content } = Layout;\n\nfunction Verify() {\n  const { token } = useParams();\n  const { services } = useService();\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const [state, setState] = useState({ status: \"verifying\", isLoading: true });\n  useEffect(async () => {\n    const response = await services.user.Active(token);\n    if (response.status === 200) {\n      message.success(\"帳戶驗證成功\");\n      history.push(\"/\");\n      return;\n    }\n    setState({ status: \"failed\", isLoading: false });\n  }, [token]);\n  const handleSubmit = async ({ email }) => {\n    const response = await services.user.Resend(email);\n    if (response.status === 200) {\n      message.success(\"驗證信已寄出\");\n      return;\n    }\n    message.error(response.data.data);\n  };\n  return (\n    <Content>\n      <Row className=\"center-left\">\n        <Breadcrumb>\n          <Breadcrumb.Separator />\n          <Breadcrumb.Item onClick={() => history.push(\"/\")}>\n            返回主頁\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </Row>\n      <Row className=\"center-vertical\">\n        <Spin spinning={state.isLoading}>\n          {state.status === \"failed\" && (\n            <Form form={form} style={{ width: 350 }} onFinish={handleSubmit}>\n              <Form.Item\n                name=\"email\"\n                label=\"信箱\"\n                rules={[\n                  { required: true, message: \"請輸你的信箱\" },\n                  { type: \"email\", message: \"輸入信箱格式錯誤\" },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n              <Button\n                style={{ width: \"100%\" }}\n                type=\"primary\"\n                onClick={() => form.submit()}\n              >\n                寄出驗證信\n              </Button>\n            </Form>\n          )}\n        </Spin>\n      </Row>\n    </Content>\n  );\n}\nexport default Verify;\n","import React from \"react\";\n\nimport { Button, Input, Layout, Row, Form, message, Breadcrumb } from \"antd\";\nimport useService from \"../api\";\nimport { useHistory } from \"react-router-dom\";\n\nconst { Content } = Layout;\n\nfunction Remind() {\n  const { services } = useService();\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const handleSubmit = async ({ email }) => {\n    const response = await services.user.Remind(email);\n    if (response.status === 200) {\n      message.success(\"密碼信已寄出\");\n      return;\n    }\n    message.error(response.data.data);\n  };\n  return (\n    <Content>\n      <Row className=\"center-left\">\n        <Breadcrumb>\n          <Breadcrumb.Separator />\n          <Breadcrumb.Item onClick={() => history.push(\"/\")}>\n            返回登入頁面\n          </Breadcrumb.Item>\n        </Breadcrumb>\n      </Row>\n      <Row className=\"center-vertical\">\n        <Form form={form} style={{ width: 350 }} onFinish={handleSubmit}>\n          <Form.Item\n            name=\"email\"\n            label=\"信箱\"\n            rules={[\n              { required: true, message: \"請輸你的信箱\" },\n              { type: \"email\", message: \"輸入信箱格式錯誤\" },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Button\n            style={{ width: \"100%\" }}\n            type=\"primary\"\n            onClick={() => form.submit()}\n          >\n            提交\n          </Button>\n        </Form>\n      </Row>\n    </Content>\n  );\n}\nexport default Remind;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch as Routes,\n  Route,\n  NavLink,\n  Redirect,\n} from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { Layout, Menu, Spin } from \"antd\";\nimport LoginPage from \"../page/login\";\nimport SignUpPage from \"../page/signup\";\nimport { useUser } from \"../context/user\";\nimport Dashboard from \"../page/dashboard\";\nimport Question from \"../page/question\";\nimport EditQuestion from \"../page/edit\";\nimport Review from \"../page/review\";\nimport Verify from \"../page/verify\";\nimport Remind from \"../page/remider\";\nconst { Content } = Layout;\n\nfunction LoginRouter() {\n  return (\n    <>\n      <Route exact path=\"/\">\n        <LoginPage />\n      </Route>\n      <Route exact path=\"/signup\">\n        <SignUpPage />\n      </Route>\n      <Route exact path=\"/verify/:token\">\n        <Verify />\n      </Route>\n      <Route exact path=\"/remind\">\n        <Remind />\n      </Route>\n    </>\n  );\n}\nfunction GameRouter() {\n  return (\n    <>\n      <Route exact path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route exact path=\"/review\">\n        <Review />\n      </Route>\n      <Route exact path=\"/new/:userID\">\n        <Question />\n      </Route>\n      <Route exact path=\"/edit/:questionID\">\n        <EditQuestion />\n      </Route>\n      <Route>\n        <Redirect to=\"/dashboard\" />\n      </Route>\n    </>\n  );\n}\nfunction MyRouter() {\n  const { isLogin, logout } = useUser();\n\n  const handleLogout = () => {\n    window.location.pathname = \"/\";\n    logout();\n  };\n\n  return (\n    <Router>\n      <Layout style={{ height: \"100%\" }}>\n        <Menu theme=\"dark\" mode=\"horizontal\">\n          <Menu.Item key=\"1\">\n            <NavLink to={isLogin ? \"/dashboard\" : \"/\"}>\n              <h1 style={{ color: \"white\" }}>SOLab</h1>\n            </NavLink>\n          </Menu.Item>\n          {isLogin && (\n            <>\n              <Menu.Item key=\"2\">\n                <NavLink to=\"/dashboard\">提問區</NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <NavLink to=\"/review\">評論區</NavLink>\n              </Menu.Item>\n              <Menu.Item\n                key=\"4\"\n                style={{ position: \"absolute\", right: 0, height: 58 }}\n                onClick={handleLogout}\n              >\n                登出\n              </Menu.Item>\n            </>\n          )}\n        </Menu>\n\n        <Content className=\"center-vertical\">\n          <Routes>\n            {!isLogin && <LoginRouter />}\n            {isLogin && <GameRouter />}\n            <Route>\n              <Spin />\n            </Route>\n          </Routes>\n        </Content>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default MyRouter;\n","import React from \"react\";\nimport MyApp from \"./context/user\";\nimport MyRouter from \"./router\";\nimport \"./App.css\";\nfunction App() {\n  return (\n    <MyApp>\n      <MyRouter />\n    </MyApp>\n  );\n}\n\nexport default App;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}